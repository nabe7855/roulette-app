{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/types/index.ts"],"sourcesContent":["export enum AppMode {\r\n  Roulette = 'roulette',\r\n  Slot = 'slot',\r\n}\r\n"],"names":[],"mappings":";;;;AAAO,IAAA,AAAK,iCAAA;;;WAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/hooks/useLocalStorage.ts"],"sourcesContent":["// FIX: Import `Dispatch` and `SetStateAction` types to resolve \"Cannot find namespace 'React'\" error.\nimport { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\nfunction useLocalStorage<T,>(key: string, initialValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue: Dispatch<SetStateAction<T>> = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    try {\n        const item = window.localStorage.getItem(key);\n        if (item) {\n            setStoredValue(JSON.parse(item));\n        }\n    } catch (error) {\n        console.error(error);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key]);\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;"],"names":[],"mappings":"AAAA,sGAAsG;;;;;AACtG;;AAEA,SAAS,gBAAoB,GAAW,EAAE,YAAe;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,4OAAQ,EAAI;QAChD,IAAI;YACF,MAAM,OAAO,OAAO,YAAY,CAAC,OAAO,CAAC;YACzC,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ;QACnC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;YACd,OAAO;QACT;IACF;IAEA,MAAM,WAAwC,CAAC;QAC7C,IAAI;YACF,MAAM,eAAe,iBAAiB,WAAW,MAAM,eAAe;YACtE,eAAe;YACf,OAAO,YAAY,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC;QAClD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;QAChB;IACF;IAEA,IAAA,6OAAS,EAAC;QACR,IAAI;YACA,MAAM,OAAO,OAAO,YAAY,CAAC,OAAO,CAAC;YACzC,IAAI,MAAM;gBACN,eAAe,KAAK,KAAK,CAAC;YAC9B;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC;QAClB;IACA,uDAAuD;IACzD,GAAG;QAAC;KAAI;IAER,OAAO;QAAC;QAAa;KAAS;AAChC;uCAEe","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/components/ToggleSwitch.tsx"],"sourcesContent":["import React from 'react';\nimport { AppMode } from '../types';\n\ninterface ToggleSwitchProps {\n  mode: AppMode;\n  onToggle: () => void;\n}\n\nconst ToggleSwitch: React.FC<ToggleSwitchProps> = ({ mode, onToggle }) => {\n  const isRoulette = mode === AppMode.Roulette;\n\n  return (\n    <div className=\"flex items-center space-x-3\">\n      <span className={`font-bold transition-colors ${!isRoulette ? 'text-blue-600' : 'text-gray-400'}`}>スロット</span>\n      <button\n        onClick={onToggle}\n        className={`relative inline-flex items-center h-7 rounded-full w-12 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500 ${isRoulette ? 'bg-pink-400' : 'bg-blue-400'}`}\n        aria-label=\"Toggle mode\"\n        onKeyDown={(e) => { if(e.key === 'Tab') { e.preventDefault(); onToggle(); }}}\n      >\n        <span\n          className={`inline-block w-5 h-5 transform bg-white rounded-full transition-transform ease-in-out duration-200 ${isRoulette ? 'translate-x-6' : 'translate-x-1'}`}\n        />\n      </button>\n      <span className={`font-bold transition-colors ${isRoulette ? 'text-pink-600' : 'text-gray-400'}`}>ルーレット</span>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;"],"names":[],"mappings":";;;;;AACA;;;AAOA,MAAM,eAA4C,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;IACnE,MAAM,aAAa,SAAS,kKAAO,CAAC,QAAQ;IAE5C,qBACE,yQAAC;QAAI,WAAU;;0BACb,yQAAC;gBAAK,WAAW,CAAC,4BAA4B,EAAE,CAAC,aAAa,kBAAkB,iBAAiB;0BAAE;;;;;;0BACnG,yQAAC;gBACC,SAAS;gBACT,WAAW,CAAC,6KAA6K,EAAE,aAAa,gBAAgB,eAAe;gBACvO,cAAW;gBACX,WAAW,CAAC;oBAAQ,IAAG,EAAE,GAAG,KAAK,OAAO;wBAAE,EAAE,cAAc;wBAAI;oBAAY;gBAAC;0BAE3E,cAAA,yQAAC;oBACC,WAAW,CAAC,mGAAmG,EAAE,aAAa,kBAAkB,iBAAiB;;;;;;;;;;;0BAGrK,yQAAC;gBAAK,WAAW,CAAC,4BAA4B,EAAE,aAAa,kBAAkB,iBAAiB;0BAAE;;;;;;;;;;;;AAGxG;uCAEe","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/constants"],"sourcesContent":["export const DEFAULT_QUESTIONS = [\r\n  \"あなたの最大の短所は何ですか？\",\r\n  \"困難な課題に直面した時のことを教えてください。\",\r\n  \"5年後の自分はどうなっていると思いますか？\",\r\n  \"なぜここで働きたいのですか？\",\r\n  \"あなたが情熱を注いでいることは何ですか？\",\r\n  \"あなたの理想的な職場環境について説明してください。\",\r\n  \"ストレスやプレッシャーにどう対処しますか？\",\r\n  \"あなたの最大の功績は何ですか？\",\r\n  \"何かの決定に同意できなかった時のことを教えてください。\",\r\n  \"あなたのモチベーションの源泉は何ですか？\",\r\n  \"どのように管理されるのが好きですか？\",\r\n  \"最近読んだ本は何ですか？\",\r\n  \"もしスーパーパワーを持てるとしたら、何を選びますか？\",\r\n  \"あなたの好きな趣味は何ですか？\",\r\n  \"自分を3つの言葉で説明してください。\",\r\n  \"どのようにして整理整頓をしていますか？\",\r\n  \"楽しみのために何をしますか？\",\r\n  \"失敗した時のことを教えてください。\",\r\n  \"あなたのキャリアの目標は何ですか？\"\r\n];\r\n\r\nexport const ADMIN_PASSWORD = \"admin\";\r\nexport const MAX_QUESTIONS = 200;\r\n\r\n// Palette: Red, Orange, Yellow, Lime, Emerald, Sky, Blue, Violet, Pink\r\nexport const POP_COLORS = ['#fecaca', '#fed7aa', '#fef08a', '#d9f99d', '#a7f3d0', '#bae6fd', '#bfdbfe', '#ddd6fe', '#fbcfe8'];"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,oBAAoB;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,iBAAiB;AACvB,MAAM,gBAAgB;AAGtB,MAAM,aAAa;IAAC;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;CAAU","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/components/Roulette.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { POP_COLORS } from '../constants';\n\ninterface RouletteProps {\n  questions: string[];\n  isSpinning: boolean;\n  targetQuestion: string | null;\n}\n\nconst Roulette: React.FC<RouletteProps> = ({ questions, isSpinning, targetQuestion }) => {\n  const [rotation, setRotation] = useState(0);\n  const itemCount = questions.length || 1;\n  const sliceAngle = 360 / itemCount;\n\n  useEffect(() => {\n    if (targetQuestion === null) {\n      // Reset rotation smoothly when history is cleared\n      setRotation(0);\n      return;\n    }\n\n    const targetIndex = questions.indexOf(targetQuestion);\n    if (targetIndex === -1) {\n      console.error(\"Target question not found in display list.\");\n      return;\n    }\n    \n    // Calculate the angle to bring the target slice to the top pointer\n    const stopAngle = -(targetIndex * sliceAngle);\n    \n    // Add extra rotations for effect.\n    const spinRounds = 5;\n    // Calculate the new rotation value to ensure it always spins forward\n    let newRotation = (Math.floor(rotation / 360) + spinRounds) * 360 + stopAngle;\n    \n    if(newRotation < rotation) {\n        newRotation += 360;\n    }\n\n    setRotation(newRotation);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetQuestion]);\n\n  const gradient = `conic-gradient(from ${-sliceAngle / 2}deg, ${questions.map((_, index) => \n    `${POP_COLORS[index % POP_COLORS.length]} ${index * sliceAngle}deg, ${POP_COLORS[index % POP_COLORS.length]} ${(index + 1) * sliceAngle}deg`\n  ).join(', ')})`;\n\n  return (\n    <div className=\"relative w-80 h-80 md:w-96 md:h-96 flex items-center justify-center\">\n      {/* Pointer */}\n      <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 z-20\" style={{\n        width: 0,\n        height: 0,\n        borderLeft: '15px solid transparent',\n        borderRight: '15px solid transparent',\n        borderTop: '25px solid #ef4444' // red-500\n      }} />\n\n      <div \n        className=\"relative w-full h-full\"\n        style={{\n            transform: `rotate(${rotation}deg)`,\n            transition: isSpinning ? 'transform 5s cubic-bezier(0.25, 0.1, 0.25, 1)' : 'none',\n        }}\n      >\n        <div className=\"absolute inset-0 rounded-full\" style={{ background: gradient, boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }} />\n        \n        {questions.map((question, index) => {\n          const angle = (index * 360) / itemCount;\n          const rotationAngle = angle + sliceAngle / 2;\n\n          return (\n            <div\n              key={index}\n              className=\"absolute top-1/2 left-1/2 origin-[0_0] h-[95px] md:h-[120px] w-[40px] md:w-[50px] flex items-center justify-center\"\n              style={{\n                transform: `rotate(${rotationAngle}deg) translate(65px) rotate(-90deg)`,\n              }}\n            >\n              <span\n                className=\"text-gray-800 text-xs md:text-sm font-semibold\"\n                style={{\n                  writingMode: 'vertical-rl',\n                  textOrientation: 'mixed',\n                  whiteSpace: 'normal',\n                  lineHeight: '1.3',\n                }}\n              >\n                {question}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Center Overlay */}\n      <div className=\"absolute w-24 h-24 md:w-32 md:h-32 bg-gray-100 rounded-full flex items-center justify-center text-center p-2 shadow-inner\">\n        <div className=\"absolute inset-0 rounded-full border-2 md:border-4 border-gray-200\"></div>\n        <div className=\"z-10 text-center\">\n              <span className=\"text-3xl\" role=\"img\" aria-label=\"roulette wheel\">🎡</span>\n              <p className=\"text-gray-500 font-semibold mt-1 text-xs md:text-sm\">スタートしてね！</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Roulette;\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAQA,MAAM,WAAoC,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE;IAClF,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,4OAAQ,EAAC;IACzC,MAAM,YAAY,UAAU,MAAM,IAAI;IACtC,MAAM,aAAa,MAAM;IAEzB,IAAA,6OAAS,EAAC;QACR,IAAI,mBAAmB,MAAM;YAC3B,kDAAkD;YAClD,YAAY;YACZ;QACF;QAEA,MAAM,cAAc,UAAU,OAAO,CAAC;QACtC,IAAI,gBAAgB,CAAC,GAAG;YACtB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,mEAAmE;QACnE,MAAM,YAAY,CAAC,CAAC,cAAc,UAAU;QAE5C,kCAAkC;QAClC,MAAM,aAAa;QACnB,qEAAqE;QACrE,IAAI,cAAc,CAAC,KAAK,KAAK,CAAC,WAAW,OAAO,UAAU,IAAI,MAAM;QAEpE,IAAG,cAAc,UAAU;YACvB,eAAe;QACnB;QAEA,YAAY;IACZ,uDAAuD;IACzD,GAAG;QAAC;KAAe;IAEnB,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,GAAG,CAAC,CAAC,GAAG,QAC/E,GAAG,0JAAU,CAAC,QAAQ,0JAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,WAAW,KAAK,EAAE,0JAAU,CAAC,QAAQ,0JAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,WAAW,GAAG,CAAC,EAC5I,IAAI,CAAC,MAAM,CAAC,CAAC;IAEf,qBACE,yQAAC;QAAI,WAAU;;0BAEb,yQAAC;gBAAI,WAAU;gBAA2D,OAAO;oBAC/E,OAAO;oBACP,QAAQ;oBACR,YAAY;oBACZ,aAAa;oBACb,WAAW,qBAAqB,UAAU;gBAC5C;;;;;;0BAEA,yQAAC;gBACC,WAAU;gBACV,OAAO;oBACH,WAAW,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC;oBACnC,YAAY,aAAa,kDAAkD;gBAC/E;;kCAEA,yQAAC;wBAAI,WAAU;wBAAgC,OAAO;4BAAE,YAAY;4BAAU,WAAW;wBAA6B;;;;;;oBAErH,UAAU,GAAG,CAAC,CAAC,UAAU;wBACxB,MAAM,QAAQ,AAAC,QAAQ,MAAO;wBAC9B,MAAM,gBAAgB,QAAQ,aAAa;wBAE3C,qBACE,yQAAC;4BAEC,WAAU;4BACV,OAAO;gCACL,WAAW,CAAC,OAAO,EAAE,cAAc,mCAAmC,CAAC;4BACzE;sCAEA,cAAA,yQAAC;gCACC,WAAU;gCACV,OAAO;oCACL,aAAa;oCACb,iBAAiB;oCACjB,YAAY;oCACZ,YAAY;gCACd;0CAEC;;;;;;2BAfE;;;;;oBAmBX;;;;;;;0BAIF,yQAAC;gBAAI,WAAU;;kCACb,yQAAC;wBAAI,WAAU;;;;;;kCACf,yQAAC;wBAAI,WAAU;;0CACT,yQAAC;gCAAK,WAAU;gCAAW,MAAK;gCAAM,cAAW;0CAAiB;;;;;;0CAClE,yQAAC;gCAAE,WAAU;0CAAsD;;;;;;;;;;;;;;;;;;;;;;;;AAKjF;uCAEe","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/components/Slot.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\ninterface SlotProps {\n  questions: string[];\n  isSpinning: boolean;\n  selectedQuestion: string | null;\n  onStart: () => void;\n  disabled: boolean;\n}\n\nconst Slot: React.FC<SlotProps> = ({ questions, isSpinning, selectedQuestion, onStart, disabled }) => {\n  const itemHeight = 64; // Corresponds to h-16 in Tailwind\n  const slotRef = useRef<HTMLDivElement>(null);\n  const [translateY, setTranslateY] = useState(0);\n  const [currentItems, setCurrentItems] = useState<string[]>([]);\n  const animationListRef = useRef<string[]>([]);\n  const [isPulled, setIsPulled] = useState(false);\n\n  useEffect(() => {\n    if (isSpinning) {\n      // STARTING THE SPIN\n      const shuffled = [...questions].sort(() => Math.random() - 0.5);\n      const extendedList = Array(5).fill(shuffled).flat();\n      animationListRef.current = extendedList;\n      setCurrentItems(extendedList);\n      \n      // Start the animation by setting the final position\n      requestAnimationFrame(() => {\n        setTranslateY(-((extendedList.length - 5) * itemHeight));\n      });\n\n    } else if (selectedQuestion) {\n      // STOPPING THE SPIN\n      const list = animationListRef.current;\n      if (list.length > 0) {\n        const baseLength = questions.length;\n        // Look for the question in a middle section for a smoother stop\n        const middleSectionStart = baseLength * 2;\n        let stopIndex = list.indexOf(selectedQuestion, middleSectionStart);\n\n        if (stopIndex === -1) { // Fallback if not found in the middle\n          stopIndex = list.indexOf(selectedQuestion);\n        }\n\n        if (stopIndex === -1) {\n            // This is a robust fallback. If the question is somehow not in our\n            // animation list, we just show the result directly.\n            console.error(\"Selected question not found in animation list. Displaying directly.\");\n            setCurrentItems([selectedQuestion]);\n            setTranslateY(0);\n        } else {\n            // Found it, so calculate the correct final position.\n            const finalPosition = -stopIndex * itemHeight;\n            setTranslateY(finalPosition);\n        }\n      } else {\n          // Fallback for when the animation list is empty for some reason\n          setCurrentItems([selectedQuestion]);\n          setTranslateY(0);\n      }\n    }\n  }, [isSpinning, selectedQuestion, questions, itemHeight]);\n  \n  const handleLeverPull = () => {\n    if (disabled) return;\n    setIsPulled(true);\n    onStart();\n    setTimeout(() => {\n        setIsPulled(false);\n    }, 300); // Animation duration\n  };\n\n  const showInitialMessage = !isSpinning && !selectedQuestion;\n\n  return (\n    <div className=\"w-full max-w-lg flex items-center justify-center gap-4\">\n      {/* Slot Machine */}\n      <div className=\"w-full max-w-md h-64 md:h-80 flex flex-col items-center justify-center\">\n        <div \n          ref={slotRef}\n          className=\"relative w-full h-16 bg-white rounded-lg border-4 border-blue-400 overflow-hidden shadow-lg flex items-center justify-center\"\n        >\n          {showInitialMessage ? (\n            <div className=\"text-center animate-fade-in\">\n              <span className=\"text-3xl\" role=\"img\" aria-label=\"slot machine\">🎰</span>\n              <p className=\"text-gray-500 font-semibold mt-1 text-xs md:text-sm\">スタートしてね！</p>\n            </div>\n          ) : (\n            <div \n              className=\"absolute w-full\"\n              style={{\n                transform: `translateY(${translateY}px)`,\n                transition: isSpinning \n                    ? 'transform 5s cubic-bezier(0.25, 0.1, 0.25, 1)' \n                    : 'transform 0.5s ease-out',\n              }}\n            >\n              {currentItems.map((question, index) => (\n                <div key={index} className=\"h-16 flex items-center justify-center text-center p-2 text-md md:text-lg font-semibold text-gray-700\">\n                  {question}\n                </div>\n              ))}\n            </div>\n          )}\n          <div className=\"absolute inset-0 pointer-events-none\" style={{\n              background: 'linear-gradient(to bottom, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 70%, rgba(255, 255, 255, 1) 100%)'\n          }}></div>\n        </div>\n      </div>\n      {/* Lever */}\n       <div className=\"flex-shrink-0 h-48 flex flex-col items-center\">\n        <div className=\"w-8 h-full bg-gray-300 rounded-t-lg relative\">\n           <div \n             onClick={handleLeverPull}\n             className={`absolute -top-2 left-1/2 -translate-x-1/2 w-3 h-36 bg-gray-500 border-2 border-gray-600 rounded-full cursor-pointer transition-transform duration-200 ease-out ${disabled ? 'opacity-50 cursor-not-allowed' : 'hover:bg-gray-400'} ${isPulled ? 'translate-y-8' : ''}`}\n             style={{transformOrigin: 'top center'}}\n           >\n             <div className=\"absolute -top-4 -left-2.5 w-8 h-8 bg-red-500 rounded-full border-2 border-red-700 shadow-md\"></div>\n           </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slot;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/components/icons.tsx"],"sourcesContent":["\nimport React from 'react';\n\nexport const SettingsIcon: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.24-.438.613-.43.992a6.759 6.759 0 0 1 0 1.905c-.008.379.137.752.43.992l1.004.827a1.125 1.125 0 0 1 .26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.333.183-.582.495-.644.869l-.213 1.28c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.759 6.759 0 0 1 0-1.905c.008-.379-.137-.752-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.49l1.217.456c.355.133.75.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281Z\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\" />\n  </svg>\n);\n\nexport const CloseIcon: React.FC<{ className?: string }> = ({ className }) => (\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n  </svg>\n);\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,eAAiD,CAAC,EAAE,SAAS,EAAE,iBAC1E,yQAAC;QAAI,WAAW;QAAW,OAAM;QAA6B,MAAK;QAAO,SAAQ;QAAY,aAAa;QAAK,QAAO;;0BACrH,yQAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,GAAE;;;;;;0BACrD,yQAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,GAAE;;;;;;;;;;;;AAIlD,MAAM,YAA8C,CAAC,EAAE,SAAS,EAAE,iBACvE,yQAAC;QAAI,WAAW;QAAW,OAAM;QAA6B,MAAK;QAAO,SAAQ;QAAY,aAAa;QAAK,QAAO;kBACrH,cAAA,yQAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,GAAE","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/components/Modal.tsx"],"sourcesContent":["import React from 'react';\nimport { CloseIcon } from './icons';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  children: React.ReactNode;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, title, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] flex flex-col text-gray-800\">\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\n          <h2 className=\"text-xl font-bold text-blue-600\">{title}</h2>\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-800 transition-colors\">\n            <CloseIcon className=\"w-6 h-6\" />\n          </button>\n        </div>\n        <div className=\"p-6 overflow-y-auto bg-gray-50 rounded-b-lg\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;"],"names":[],"mappings":";;;;;AACA;;;AASA,MAAM,QAA8B,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE;IACvE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,yQAAC;QAAI,WAAU;kBACb,cAAA,yQAAC;YAAI,WAAU;;8BACb,yQAAC;oBAAI,WAAU;;sCACb,yQAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,yQAAC;4BAAO,SAAS;4BAAS,WAAU;sCAClC,cAAA,yQAAC,0KAAS;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAGzB,yQAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;uCAEe","debugId":null}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/components/AdminPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from './Modal';\nimport { ADMIN_PASSWORD, MAX_QUESTIONS } from '../constants';\n\ninterface AdminPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  questions: string[];\n  setQuestions: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst AdminPanel: React.FC<AdminPanelProps> = ({ isOpen, onClose, questions, setQuestions }) => {\n  const [password, setPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState('');\n  const [newQuestion, setNewQuestion] = useState('');\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\n  const [editingText, setEditingText] = useState('');\n\n  const handleLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (password === ADMIN_PASSWORD) {\n      setIsAuthenticated(true);\n      setError('');\n    } else {\n      setError('パスワードが違います。');\n    }\n  };\n\n  const handleAddQuestion = () => {\n    if (newQuestion.trim() && questions.length < MAX_QUESTIONS) {\n      setQuestions(prev => [...prev, newQuestion.trim()]);\n      setNewQuestion('');\n    }\n  };\n\n  const handleEdit = (index: number) => {\n    setEditingIndex(index);\n    setEditingText(questions[index]);\n  };\n\n  const handleSaveEdit = (index: number) => {\n    if (editingText.trim()) {\n      const updatedQuestions = [...questions];\n      updatedQuestions[index] = editingText.trim();\n      setQuestions(updatedQuestions);\n      setEditingIndex(null);\n      setEditingText('');\n    }\n  };\n\n  const handleDelete = (index: number) => {\n    if (window.confirm('この質問を削除してもよろしいですか？')) {\n      setQuestions(prev => prev.filter((_, i) => i !== index));\n    }\n  };\n\n  const renderLogin = () => (\n    <form onSubmit={handleLogin} className=\"space-y-4\">\n      <div>\n        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-600\">パスワード</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"mt-1 block w-full bg-white border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-gray-800 p-2\"\n        />\n      </div>\n      {error && <p className=\"text-red-500 text-sm\">{error}</p>}\n      <button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md transition-colors\">\n        ログイン\n      </button>\n    </form>\n  );\n\n  const renderAdminView = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-2 text-gray-700\">新しい質問を追加 ({questions.length}/{MAX_QUESTIONS})</h3>\n        <div className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            value={newQuestion}\n            onChange={(e) => setNewQuestion(e.target.value)}\n            placeholder=\"新しい質問を入力\"\n            className=\"flex-grow bg-white border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-gray-800 p-2\"\n            disabled={questions.length >= MAX_QUESTIONS}\n          />\n          <button onClick={handleAddQuestion} className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\" disabled={questions.length >= MAX_QUESTIONS}>\n            追加\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <h3 className=\"text-lg font-semibold mb-2 text-gray-700\">質問を管理</h3>\n        <ul className=\"space-y-2 max-h-80 overflow-y-auto pr-2\">\n          {questions.map((q, index) => (\n            <li key={index} className=\"bg-white p-3 rounded-md flex items-center justify-between gap-2 border border-gray-200\">\n              {editingIndex === index ? (\n                <input\n                  type=\"text\"\n                  value={editingText}\n                  onChange={(e) => setEditingText(e.target.value)}\n                  className=\"flex-grow bg-gray-50 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-gray-800 p-1\"\n                  onKeyDown={(e) => e.key === 'Enter' && handleSaveEdit(index)}\n                />\n              ) : (\n                <span className=\"flex-grow\">{q}</span>\n              )}\n              <div className=\"flex gap-2 flex-shrink-0\">\n                {editingIndex === index ? (\n                  <button onClick={() => handleSaveEdit(index)} className=\"text-green-600 hover:text-green-500 transition-colors font-medium\">保存</button>\n                ) : (\n                  <button onClick={() => handleEdit(index)} className=\"text-yellow-600 hover:text-yellow-500 transition-colors font-medium\">編集</button>\n                )}\n                <button onClick={() => handleDelete(index)} className=\"text-red-600 hover:text-red-500 transition-colors font-medium\">削除</button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title=\"管理パネル\">\n      {isAuthenticated ? renderAdminView() : renderLogin()}\n    </Modal>\n  );\n};\n\nexport default AdminPanel;"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AASA,MAAM,aAAwC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE;IACzF,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,4OAAQ,EAAC;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,4OAAQ,EAAC;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,4OAAQ,EAAC;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,4OAAQ,EAAC;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,4OAAQ,EAAgB;IAChE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,4OAAQ,EAAC;IAE/C,MAAM,cAAc,CAAC;QACnB,EAAE,cAAc;QAChB,IAAI,aAAa,8JAAc,EAAE;YAC/B,mBAAmB;YACnB,SAAS;QACX,OAAO;YACL,SAAS;QACX;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,YAAY,IAAI,MAAM,UAAU,MAAM,GAAG,6JAAa,EAAE;YAC1D,aAAa,CAAA,OAAQ;uBAAI;oBAAM,YAAY,IAAI;iBAAG;YAClD,eAAe;QACjB;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,gBAAgB;QAChB,eAAe,SAAS,CAAC,MAAM;IACjC;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,YAAY,IAAI,IAAI;YACtB,MAAM,mBAAmB;mBAAI;aAAU;YACvC,gBAAgB,CAAC,MAAM,GAAG,YAAY,IAAI;YAC1C,aAAa;YACb,gBAAgB;YAChB,eAAe;QACjB;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,IAAI,OAAO,OAAO,CAAC,uBAAuB;YACxC,aAAa,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;QACnD;IACF;IAEA,MAAM,cAAc,kBAClB,yQAAC;YAAK,UAAU;YAAa,WAAU;;8BACrC,yQAAC;;sCACC,yQAAC;4BAAM,SAAQ;4BAAW,WAAU;sCAA0C;;;;;;sCAC9E,yQAAC;4BACC,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;;;;;;;;;;;;gBAGb,uBAAS,yQAAC;oBAAE,WAAU;8BAAwB;;;;;;8BAC/C,yQAAC;oBAAO,MAAK;oBAAS,WAAU;8BAAmG;;;;;;;;;;;;IAMvI,MAAM,kBAAkB,kBACtB,yQAAC;YAAI,WAAU;;8BACb,yQAAC;;sCACC,yQAAC;4BAAG,WAAU;;gCAA2C;gCAAW,UAAU,MAAM;gCAAC;gCAAE,6JAAa;gCAAC;;;;;;;sCACrG,yQAAC;4BAAI,WAAU;;8CACb,yQAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;oCAC9C,aAAY;oCACZ,WAAU;oCACV,UAAU,UAAU,MAAM,IAAI,6JAAa;;;;;;8CAE7C,yQAAC;oCAAO,SAAS;oCAAmB,WAAU;oCAA8I,UAAU,UAAU,MAAM,IAAI,6JAAa;8CAAE;;;;;;;;;;;;;;;;;;8BAM7O,yQAAC;;sCACC,yQAAC;4BAAG,WAAU;sCAA2C;;;;;;sCACzD,yQAAC;4BAAG,WAAU;sCACX,UAAU,GAAG,CAAC,CAAC,GAAG,sBACjB,yQAAC;oCAAe,WAAU;;wCACvB,iBAAiB,sBAChB,yQAAC;4CACC,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4CAC9C,WAAU;4CACV,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW,eAAe;;;;;qGAGxD,yQAAC;4CAAK,WAAU;sDAAa;;;;;;sDAE/B,yQAAC;4CAAI,WAAU;;gDACZ,iBAAiB,sBAChB,yQAAC;oDAAO,SAAS,IAAM,eAAe;oDAAQ,WAAU;8DAAoE;;;;;6GAE5H,yQAAC;oDAAO,SAAS,IAAM,WAAW;oDAAQ,WAAU;8DAAsE;;;;;;8DAE5H,yQAAC;oDAAO,SAAS,IAAM,aAAa;oDAAQ,WAAU;8DAAgE;;;;;;;;;;;;;mCAlBjH;;;;;;;;;;;;;;;;;;;;;;IA2BnB,qBACE,yQAAC,wKAAK;QAAC,QAAQ;QAAQ,SAAS;QAAS,OAAM;kBAC5C,kBAAkB,oBAAoB;;;;;;AAG7C;uCAEe","debugId":null}},
    {"offset": {"line": 953, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/src/app/page.tsx"],"sourcesContent":["'use client';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { AppMode } from '@/app/types';\nimport { DEFAULT_QUESTIONS } from '../constants';\nimport useLocalStorage from '@/app/hooks/useLocalStorage';\nimport ToggleSwitch from '@/app/components/ToggleSwitch';\nimport Roulette from '@/app/components/Roulette';\nimport Slot from '@/app/components/Slot';\nimport AdminPanel from '@/app/components/AdminPanel';\nimport { SettingsIcon } from '@/app/components/icons';\n\nexport default function Page() {\n  const [mode, setMode] = useLocalStorage<AppMode>('app-mode', AppMode.Roulette);\n  const [questions, setQuestions] = useLocalStorage<string[]>('questions', DEFAULT_QUESTIONS);\n  const [askedIndexes, setAskedIndexes] = useLocalStorage<number[]>('asked-indexes', []);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState<string | null>(null);\n  const [displayQuestions, setDisplayQuestions] = useState<string[]>([]);\n  const [isAdminPanelOpen, setIsAdminPanelOpen] = useState(false);\n  const [targetQuestion, setTargetQuestion] = useState<string | null>(null);\n\n  const getAvailableQuestions = useCallback(() => {\n    return questions\n      .map((q, i) => ({ question: q, index: i }))\n      .filter(item => !askedIndexes.includes(item.index));\n  }, [questions, askedIndexes]);\n\n  const handleStart = () => {\n    if (isSpinning) return;\n\n    const available = getAvailableQuestions();\n    if (available.length === 0) {\n      alert(\"すべての質問が出題されました！「クリア」ボタンでリセットしてください。\");\n      return;\n    }\n\n    setIsSpinning(true);\n    setSelectedQuestion(null);\n\n    const finalPick = available[Math.floor(Math.random() * available.length)];\n    const displayPool = [...available];\n    let tempDisplay = [finalPick.question];\n\n    while (tempDisplay.length < 10 && displayPool.length > 0) {\n      const randomIndex = Math.floor(Math.random() * displayPool.length);\n      const randomItem = displayPool[randomIndex];\n      if (randomItem && !tempDisplay.includes(randomItem.question)) {\n        tempDisplay.push(randomItem.question);\n      }\n      displayPool.splice(randomIndex, 1);\n    }\n\n    const finalDisplayQuestions = tempDisplay.sort(() => Math.random() - 0.5);\n    setDisplayQuestions(finalDisplayQuestions);\n    setTargetQuestion(finalPick.question);\n\n    setTimeout(() => {\n      setSelectedQuestion(finalPick.question);\n      setAskedIndexes(prev => [...prev, finalPick.index]);\n      setIsSpinning(false);\n    }, 5000);\n  };\n\n  const handleClear = () => {\n    setAskedIndexes([]);\n    setSelectedQuestion(null);\n    setTargetQuestion(null);\n    alert(\"履歴がクリアされました。新しいセッションを開始できます。\");\n  };\n\n  const handleToggleMode = () => {\n    setMode(prev => prev === AppMode.Roulette ? AppMode.Slot : AppMode.Roulette);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        handleToggleMode();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mode]);\n\n  useEffect(() => {\n    const available = getAvailableQuestions();\n    const initialDisplay = [...available.map(q => q.question)]\n      .sort(() => 0.5 - Math.random())\n      .slice(0, 10);\n    setDisplayQuestions(initialDisplay);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questions]);\n\n  const availableCount = getAvailableQuestions().length;\n  const totalCount = questions.length;\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-800 flex flex-col items-center justify-center p-4 font-sans relative\">\n      <div className=\"absolute top-4 right-4\">\n        <button\n          onClick={() => setIsAdminPanelOpen(true)}\n          disabled={isSpinning}\n          className=\"text-gray-500 hover:text-blue-500 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          <SettingsIcon className=\"w-8 h-8\" />\n        </button>\n      </div>\n\n      <header className=\"text-center mb-8\">\n        <h1 className=\"text-4xl md:text-5xl font-bold text-gray-800\">\n          質問{mode === AppMode.Roulette ? 'ルーレット' : 'スロット'}\n        </h1>\n        <p className=\"text-gray-500 mt-2\">自己PRの練習や会話のきっかけ作りに！</p>\n      </header>\n\n      <main className=\"flex-grow flex flex-col items-center justify-center w-full\">\n        {mode === AppMode.Roulette ? (\n          <Roulette\n            questions={displayQuestions}\n            isSpinning={isSpinning}\n            targetQuestion={targetQuestion}\n          />\n        ) : (\n          <Slot\n            questions={questions}\n            isSpinning={isSpinning}\n            selectedQuestion={selectedQuestion}\n            onStart={handleStart}\n            disabled={isSpinning || availableCount === 0}\n          />\n        )}\n      </main>\n\n      <footer className=\"w-full max-w-lg mt-8\">\n        <div className=\"flex items-center justify-center mb-6\">\n          <ToggleSwitch mode={mode} onToggle={handleToggleMode} />\n        </div>\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          <button\n            onClick={handleStart}\n            disabled={isSpinning || availableCount === 0}\n            className=\"w-full bg-green-500 hover:bg-green-600 disabled:bg-gray-400 disabled:cursor-not-allowed text-white font-bold py-3 px-6 rounded-lg text-lg transition-all duration-300 transform hover:scale-105 shadow-lg shadow-green-500/30\"\n          >\n            {isSpinning ? '回転中...' : 'スタート'}\n          </button>\n          <button\n            onClick={handleClear}\n            disabled={isSpinning}\n            className=\"w-full bg-gray-300 hover:bg-gray-400 disabled:opacity-50 text-gray-800 font-bold py-3 px-6 rounded-lg text-lg transition-colors\"\n          >\n            履歴をクリア\n          </button>\n        </div>\n        <p className=\"text-center mt-4 text-gray-500 font-medium\">\n          残り {availableCount} / {totalCount} 問\n        </p>\n      </footer>\n\n      <AdminPanel\n        isOpen={isAdminPanelOpen}\n        onClose={() => setIsAdminPanelOpen(false)}\n        questions={questions}\n        setQuestions={setQuestions}\n      />\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1259, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,8IACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1264, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/roulette-app-main/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,8IACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}