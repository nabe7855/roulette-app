{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/constants.ts"],"sourcesContent":["export const DEFAULT_QUESTIONS = [\r\n  \"あなたの最大の短所は何ですか？\",\r\n  \"困難な課題に直面した時のことを教えてください。\",\r\n  \"5年後の自分はどうなっていると思いますか？\",\r\n  \"なぜここで働きたいのですか？\",\r\n  \"あなたが情熱を注いでいることは何ですか？\",\r\n  \"あなたの理想的な職場環境について説明してください。\",\r\n  \"ストレスやプレッシャーにどう対処しますか？\",\r\n  \"あなたの最大の功績は何ですか？\",\r\n  \"何かの決定に同意できなかった時のことを教えてください。\",\r\n  \"あなたのモチベーションの源泉は何ですか？\",\r\n  \"どのように管理されるのが好きですか？\",\r\n  \"最近読んだ本は何ですか？\",\r\n  \"もしスーパーパワーを持てるとしたら、何を選びますか？\",\r\n  \"あなたの好きな趣味は何ですか？\",\r\n  \"自分を3つの言葉で説明してください。\",\r\n  \"どのようにして整理整頓をしていますか？\",\r\n  \"楽しみのために何をしますか？\",\r\n  \"失敗した時のことを教えてください。\",\r\n  \"あなたのキャリアの目標は何ですか？\"\r\n];\r\n\r\nexport const ADMIN_PASSWORD = \"admin\";\r\nexport const MAX_QUESTIONS = 200;\r\n\r\n// Palette: Red, Orange, Yellow, Lime, Emerald, Sky, Blue, Violet, Pink\r\nexport const POP_COLORS = ['#fecaca', '#fed7aa', '#fef08a', '#d9f99d', '#a7f3d0', '#bae6fd', '#bfdbfe', '#ddd6fe', '#fbcfe8'];"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,oBAAoB;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,iBAAiB;AACvB,MAAM,gBAAgB;AAGtB,MAAM,aAAa;IAAC;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;CAAU","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/src/app/components/Roulette.tsx"],"sourcesContent":["import React, { useState, useEffect,  } from 'react';\r\nimport { POP_COLORS } from '../../../constants';\r\n\r\ninterface RouletteProps {\r\n  questions: string[];\r\n  isSpinning: boolean;\r\n  targetQuestion: string | null;\r\n}\r\n\r\nconst Roulette: React.FC<RouletteProps> = ({ questions, isSpinning, targetQuestion }) => {\r\n  const [rotation, setRotation] = useState(0);\r\n  const itemCount = questions.length || 1;\r\n  const sliceAngle = 360 / itemCount;\r\n\r\n  useEffect(() => {\r\n    if (targetQuestion === null) {\r\n      // Reset rotation smoothly when history is cleared\r\n      setRotation(0);\r\n      return;\r\n    }\r\n\r\n    const targetIndex = questions.indexOf(targetQuestion);\r\n    if (targetIndex === -1) {\r\n      console.error(\"Target question not found in display list.\");\r\n      return;\r\n    }\r\n    \r\n    // Calculate the angle to bring the target slice to the top pointer\r\n    const stopAngle = -((targetIndex + 0.5) * sliceAngle);\r\n    \r\n    // Add extra rotations for effect.\r\n    const spinRounds = 5;\r\n    // Calculate the new rotation value to ensure it always spins forward\r\n    let newRotation = (Math.floor(rotation / 360) + spinRounds) * 360 + stopAngle;\r\n    \r\n    if(newRotation < rotation) {\r\n        newRotation += 360;\r\n    }\r\n\r\n    setRotation(newRotation);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [targetQuestion]);\r\n\r\n  const gradient = `conic-gradient(from ${-sliceAngle / 2}deg, ${questions.map((_, index) => \r\n    `${POP_COLORS[index % POP_COLORS.length]} ${index * sliceAngle}deg, ${POP_COLORS[index % POP_COLORS.length]} ${(index + 1) * sliceAngle}deg`\r\n  ).join(', ')})`;\r\n\r\n  return (\r\n    <div className=\"relative w-80 h-80 md:w-96 md:h-96 flex items-center justify-center\">\r\n      {/* Pointer */}\r\n      <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 z-20\" style={{\r\n        width: 0,\r\n        height: 0,\r\n        borderLeft: '15px solid transparent',\r\n        borderRight: '15px solid transparent',\r\n        borderTop: '25px solid #ef4444' // red-500\r\n      }} />\r\n\r\n      <div \r\n        className=\"relative w-full h-full\"\r\n        style={{\r\n            transform: `rotate(${rotation}deg)`,\r\n            transition: isSpinning ? 'transform 5s cubic-bezier(0.25, 0.1, 0.25, 1)' : 'none',\r\n        }}\r\n      >\r\n        <div className=\"absolute inset-0 rounded-full\" style={{ background: gradient, boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }} />\r\n        \r\n        {questions.map((question, index) => {\r\n          const angle = (index * 360) / itemCount;\r\n          const rotationAngle = angle + sliceAngle / 2;\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"absolute top-1/2 left-1/2 origin-[0_0] h-[95px] md:h-[120px] w-[40px] md:w-[50px] flex items-center justify-center\"\r\n              style={{\r\n                transform: `rotate(${rotationAngle}deg) translate(65px) rotate(-90deg)`,\r\n              }}\r\n            >\r\n              <span\r\n                className=\"text-gray-800 text-xs md:text-sm font-semibold\"\r\n                style={{\r\n                  writingMode: 'vertical-rl',\r\n                  textOrientation: 'mixed',\r\n                  whiteSpace: 'normal',\r\n                  lineHeight: '1.3',\r\n                }}\r\n              >\r\n                {question}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Center Overlay */}\r\n      <div className=\"absolute w-24 h-24 md:w-32 md:h-32 bg-gray-100 rounded-full flex items-center justify-center text-center p-2 shadow-inner\">\r\n        <div className=\"absolute inset-0 rounded-full border-2 md:border-4 border-gray-200\"></div>\r\n        <div className=\"z-10 text-center\">\r\n              <span className=\"text-3xl\" role=\"img\" aria-label=\"roulette wheel\">🎡</span>\r\n              <p className=\"text-gray-500 font-semibold mt-1 text-xs md:text-sm\">スタートしてね！</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roulette;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAQA,MAAM,WAAoC,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE;IAClF,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,YAAY,UAAU,MAAM,IAAI;IACtC,MAAM,aAAa,MAAM;IAEzB,IAAA,kNAAS,EAAC;QACR,IAAI,mBAAmB,MAAM;YAC3B,kDAAkD;YAClD,YAAY;YACZ;QACF;QAEA,MAAM,cAAc,UAAU,OAAO,CAAC;QACtC,IAAI,gBAAgB,CAAC,GAAG;YACtB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,mEAAmE;QACnE,MAAM,YAAY,CAAC,CAAC,CAAC,cAAc,GAAG,IAAI,UAAU;QAEpD,kCAAkC;QAClC,MAAM,aAAa;QACnB,qEAAqE;QACrE,IAAI,cAAc,CAAC,KAAK,KAAK,CAAC,WAAW,OAAO,UAAU,IAAI,MAAM;QAEpE,IAAG,cAAc,UAAU;YACvB,eAAe;QACnB;QAEA,YAAY;IACZ,uDAAuD;IACzD,GAAG;QAAC;KAAe;IAEnB,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,GAAG,CAAC,CAAC,GAAG,QAC/E,GAAG,uHAAU,CAAC,QAAQ,uHAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,WAAW,KAAK,EAAE,uHAAU,CAAC,QAAQ,uHAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,WAAW,GAAG,CAAC,EAC5I,IAAI,CAAC,MAAM,CAAC,CAAC;IAEf,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;gBAA2D,OAAO;oBAC/E,OAAO;oBACP,QAAQ;oBACR,YAAY;oBACZ,aAAa;oBACb,WAAW,qBAAqB,UAAU;gBAC5C;;;;;;0BAEA,8OAAC;gBACC,WAAU;gBACV,OAAO;oBACH,WAAW,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC;oBACnC,YAAY,aAAa,kDAAkD;gBAC/E;;kCAEA,8OAAC;wBAAI,WAAU;wBAAgC,OAAO;4BAAE,YAAY;4BAAU,WAAW;wBAA6B;;;;;;oBAErH,UAAU,GAAG,CAAC,CAAC,UAAU;wBACxB,MAAM,QAAQ,AAAC,QAAQ,MAAO;wBAC9B,MAAM,gBAAgB,QAAQ,aAAa;wBAE3C,qBACE,8OAAC;4BAEC,WAAU;4BACV,OAAO;gCACL,WAAW,CAAC,OAAO,EAAE,cAAc,mCAAmC,CAAC;4BACzE;sCAEA,cAAA,8OAAC;gCACC,WAAU;gCACV,OAAO;oCACL,aAAa;oCACb,iBAAiB;oCACjB,YAAY;oCACZ,YAAY;gCACd;0CAEC;;;;;;2BAfE;;;;;oBAmBX;;;;;;;0BAIF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;0CACT,8OAAC;gCAAK,WAAU;gCAAW,MAAK;gCAAM,cAAW;0CAAiB;;;;;;0CAClE,8OAAC;gCAAE,WAAU;0CAAsD;;;;;;;;;;;;;;;;;;;;;;;;AAKjF;uCAEe","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/src/app/components/ResultModal.tsx"],"sourcesContent":["import React, { useState, useEffect,  } from 'react';\r\nimport { POP_COLORS } from '../../../constants';\r\n\r\ninterface RouletteProps {\r\n  questions: string[];\r\n  isSpinning: boolean;\r\n  targetQuestion: string | null;\r\n}\r\n\r\nconst Roulette: React.FC<RouletteProps> = ({ questions, isSpinning, targetQuestion }) => {\r\n  const [rotation, setRotation] = useState(0);\r\n  const itemCount = questions.length || 1;\r\n  const sliceAngle = 360 / itemCount;\r\n\r\n  useEffect(() => {\r\n    if (targetQuestion === null) {\r\n      // Reset rotation smoothly when history is cleared\r\n      setRotation(0);\r\n      return;\r\n    }\r\n\r\n    const targetIndex = questions.indexOf(targetQuestion);\r\n    if (targetIndex === -1) {\r\n      console.error(\"Target question not found in display list.\");\r\n      return;\r\n    }\r\n    \r\n    // Calculate the angle to bring the target slice to the top pointer\r\n    const stopAngle = -(targetIndex * sliceAngle);\r\n    \r\n    // Add extra rotations for effect.\r\n    const spinRounds = 5;\r\n    // Calculate the new rotation value to ensure it always spins forward\r\n    let newRotation = (Math.floor(rotation / 360) + spinRounds) * 360 + stopAngle;\r\n    \r\n    if(newRotation < rotation) {\r\n        newRotation += 360;\r\n    }\r\n\r\n    setRotation(newRotation);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [targetQuestion]);\r\n\r\n  const gradient = `conic-gradient(from ${-sliceAngle / 2}deg, ${questions.map((_, index) => \r\n    `${POP_COLORS[index % POP_COLORS.length]} ${index * sliceAngle}deg, ${POP_COLORS[index % POP_COLORS.length]} ${(index + 1) * sliceAngle}deg`\r\n  ).join(', ')})`;\r\n\r\n  return (\r\n    <div className=\"relative w-80 h-80 md:w-96 md:h-96 flex items-center justify-center\">\r\n      {/* Pointer */}\r\n      <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 z-20\" style={{\r\n        width: 0,\r\n        height: 0,\r\n        borderLeft: '15px solid transparent',\r\n        borderRight: '15px solid transparent',\r\n        borderTop: '25px solid #ef4444' // red-500\r\n      }} />\r\n\r\n      <div \r\n        className=\"relative w-full h-full\"\r\n        style={{\r\n            transform: `rotate(${rotation}deg)`,\r\n            transition: isSpinning ? 'transform 5s cubic-bezier(0.25, 0.1, 0.25, 1)' : 'none',\r\n        }}\r\n      >\r\n        <div className=\"absolute inset-0 rounded-full\" style={{ background: gradient, boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }} />\r\n        \r\n        {questions.map((question, index) => {\r\n          const angle = (index * 360) / itemCount;\r\n          const rotationAngle = angle + sliceAngle / 2;\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"absolute top-1/2 left-1/2 origin-[0_0] h-[95px] md:h-[120px] w-[40px] md:w-[50px] flex items-center justify-center\"\r\n              style={{\r\n                transform: `rotate(${rotationAngle}deg) translate(65px) rotate(-90deg)`,\r\n              }}\r\n            >\r\n              <span\r\n                className=\"text-gray-800 text-xs md:text-sm font-semibold\"\r\n                style={{\r\n                  writingMode: 'vertical-rl',\r\n                  textOrientation: 'mixed',\r\n                  whiteSpace: 'normal',\r\n                  lineHeight: '1.3',\r\n                }}\r\n              >\r\n                {question}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Center Overlay */}\r\n      <div className=\"absolute w-24 h-24 md:w-32 md:h-32 bg-gray-100 rounded-full flex items-center justify-center text-center p-2 shadow-inner\">\r\n        <div className=\"absolute inset-0 rounded-full border-2 md:border-4 border-gray-200\"></div>\r\n        <div className=\"z-10 text-center\">\r\n              <span className=\"text-3xl\" role=\"img\" aria-label=\"roulette wheel\">🎡</span>\r\n              <p className=\"text-gray-500 font-semibold mt-1 text-xs md:text-sm\">スタートしてね！</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roulette;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAQA,MAAM,WAAoC,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE;IAClF,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,YAAY,UAAU,MAAM,IAAI;IACtC,MAAM,aAAa,MAAM;IAEzB,IAAA,kNAAS,EAAC;QACR,IAAI,mBAAmB,MAAM;YAC3B,kDAAkD;YAClD,YAAY;YACZ;QACF;QAEA,MAAM,cAAc,UAAU,OAAO,CAAC;QACtC,IAAI,gBAAgB,CAAC,GAAG;YACtB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,mEAAmE;QACnE,MAAM,YAAY,CAAC,CAAC,cAAc,UAAU;QAE5C,kCAAkC;QAClC,MAAM,aAAa;QACnB,qEAAqE;QACrE,IAAI,cAAc,CAAC,KAAK,KAAK,CAAC,WAAW,OAAO,UAAU,IAAI,MAAM;QAEpE,IAAG,cAAc,UAAU;YACvB,eAAe;QACnB;QAEA,YAAY;IACZ,uDAAuD;IACzD,GAAG;QAAC;KAAe;IAEnB,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,GAAG,CAAC,CAAC,GAAG,QAC/E,GAAG,uHAAU,CAAC,QAAQ,uHAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,WAAW,KAAK,EAAE,uHAAU,CAAC,QAAQ,uHAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,WAAW,GAAG,CAAC,EAC5I,IAAI,CAAC,MAAM,CAAC,CAAC;IAEf,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;gBAA2D,OAAO;oBAC/E,OAAO;oBACP,QAAQ;oBACR,YAAY;oBACZ,aAAa;oBACb,WAAW,qBAAqB,UAAU;gBAC5C;;;;;;0BAEA,8OAAC;gBACC,WAAU;gBACV,OAAO;oBACH,WAAW,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC;oBACnC,YAAY,aAAa,kDAAkD;gBAC/E;;kCAEA,8OAAC;wBAAI,WAAU;wBAAgC,OAAO;4BAAE,YAAY;4BAAU,WAAW;wBAA6B;;;;;;oBAErH,UAAU,GAAG,CAAC,CAAC,UAAU;wBACxB,MAAM,QAAQ,AAAC,QAAQ,MAAO;wBAC9B,MAAM,gBAAgB,QAAQ,aAAa;wBAE3C,qBACE,8OAAC;4BAEC,WAAU;4BACV,OAAO;gCACL,WAAW,CAAC,OAAO,EAAE,cAAc,mCAAmC,CAAC;4BACzE;sCAEA,cAAA,8OAAC;gCACC,WAAU;gCACV,OAAO;oCACL,aAAa;oCACb,iBAAiB;oCACjB,YAAY;oCACZ,YAAY;gCACd;0CAEC;;;;;;2BAfE;;;;;oBAmBX;;;;;;;0BAIF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;0CACT,8OAAC;gCAAK,WAAU;gCAAW,MAAK;gCAAM,cAAW;0CAAiB;;;;;;0CAClE,8OAAC;gCAAE,WAAU;0CAAsD;;;;;;;;;;;;;;;;;;;;;;;;AAKjF;uCAEe","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/src/app/components/icons.tsx"],"sourcesContent":["\r\nimport React from 'react';\r\n\r\nexport const SettingsIcon: React.FC<{ className?: string }> = ({ className }) => (\r\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.24-.438.613-.43.992a6.759 6.759 0 0 1 0 1.905c-.008.379.137.752.43.992l1.004.827a1.125 1.125 0 0 1 .26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.333.183-.582.495-.644.869l-.213 1.28c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.759 6.759 0 0 1 0-1.905c.008-.379-.137-.752-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.49l1.217.456c.355.133.75.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281Z\" />\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\" />\r\n  </svg>\r\n);\r\n\r\nexport const CloseIcon: React.FC<{ className?: string }> = ({ className }) => (\r\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\r\n  </svg>\r\n);\r\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,eAAiD,CAAC,EAAE,SAAS,EAAE,iBAC1E,8OAAC;QAAI,WAAW;QAAW,OAAM;QAA6B,MAAK;QAAO,SAAQ;QAAY,aAAa;QAAK,QAAO;;0BACrH,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,GAAE;;;;;;0BACrD,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,GAAE;;;;;;;;;;;;AAIlD,MAAM,YAA8C,CAAC,EAAE,SAAS,EAAE,iBACvE,8OAAC;QAAI,WAAW;QAAW,OAAM;QAA6B,MAAK;QAAO,SAAQ;QAAY,aAAa;QAAK,QAAO;kBACrH,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,GAAE","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Downloads/roulette-app-main/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}